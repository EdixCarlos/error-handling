plugins {
	id 'java-library'
	id 'org.springframework.boot' version '3.3.1' apply(false)
	id 'io.spring.dependency-management' version '1.1.5'
	id 'maven-publish'
	id 'jacoco'
	id "org.sonarqube" version "5.1.0.4882"
}

group = 'org.aje'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

dependencies {
	api 'org.springframework.boot:spring-boot-starter-web:3.3.1'
//	api 'org.springframework.boot:spring-boot-starter-security:3.3.1'
	api 'org.springframework.boot:spring-boot-starter-validation:3.3.1'
	api 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.1'
	api 'org.springframework.boot:spring-boot-starter-web-services:3.3.1'
//	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/EdixCarlos/error-handling")
			credentials {
				username = project.findProperty("user") ?: System.getenv("USERNAME")
				password = project.findProperty("token") ?: System.getenv("TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			from(components.java)
		}
	}
}


jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		html.required = true

		xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
		html.destination file("${buildDir}/reports/jacoco/test/html")
	}
}

test {
	finalizedBy jacocoTestReport
}

sonarqube {
	properties {
		property "sonar.projectKey", "shared-library-error-catalog"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", project.findProperty("sonar_token")
		property "sonar.java.binaries", "${buildDir}/classes"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}